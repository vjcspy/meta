// CLEARFIX
@mixin clearfix {
  &:after  {
    display: table;
    clear: both;
    height: 0;
    content: '';
  }
}

// CACULATE
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

//  BORDER RADIUS
@mixin radius-border($radius: 0) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// BOX SIZING
@mixin box-sizing($type) {
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type;
}

// OPACITY
@mixin opacity($opacity) {
  filter: alpha(opacity=($opacity * 100));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  opacity: $opacity;
}

// TEXT SHADOW
@mixin text-shadow($textshadow) {
  -webkit-text-shadow: $textshadow;
  -moz-text-shadow: $textshadow;
  text-shadow: $textshadow;
}

// BOX SHADOW
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  -ms-box-shadow: $shadow;
  -o-box-shadow: $shadow;
  box-shadow: $shadow;
}

// ANIMATION
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

// ANIMATION DURATION
@mixin animation-duration( $duration ) {
  -webkit-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -o-animation-duration: $duration;
  animation-duration: $duration;
}

// KEYFRAMES
@mixin keyframes( $animationName ) {
  @-webkit-keyframes #{$animationName} {
    $browser: '-webkit-' !global;
    @content;
  }
  @-moz-keyframes #{$animationName} {
    $browser: '-moz-' !global;
    @content;
  }
  @-o-keyframes #{$animationName} {
    $browser: '-o-' !global;
    @content;
  }
  @keyframes #{$animationName} {
    $browser: '' !global;
    @content;
  }
} $browser: null;


// TRANSITIONS
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}
@mixin transition-delay($delay) {
  transition-delay: $delay;
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
}
@mixin transition-property($argument...) {
  -webkit-transition-property: $argument;
  -moz-transition-property: $argument;
  -o-transition-property: $argument;
  transition-property: $argument;
}

// TRANSFORMATIONS
@mixin transform-origin($transform) {
  -webkit-transform-origin: $transform;
  -moz-transform-origin: $transform;
  -ms-transform-origin: $transform;
  -o-transform-origin: $transform;
  transform-origin: $transform;
}
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -moz-transform: rotate($degrees);
  -ms-transform: rotate($degrees);
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}
@mixin scale($x, $y) {
  -webkit-transform: scale($x, $y);
  -moz-transform: scale($x, $y);
  -ms-transform: scale($x, $y);
  -o-transform: scale($x, $y);
  transform: scale($x, $y);
}
@mixin scale3D($x, $y, $z) {
  -webkit-transform: scale($x, $y, $z);
  -moz-transform: scale($x, $y, $z);
  -ms-transform: scale($x, $y, $z);
  -o-transform: scale($x, $y, $z);
  transform: scale($x, $y, $z);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}
@mixin translateX($x) {
  -webkit-transform: translateX($x);
  -moz-transform: translateX($x);
  -ms-transform: translateX($x);
  -o-transform: translateX($x);
  transform: translateX($x);
}
@mixin translateY($y) {
  -webkit-transform: translateY($y);
  -moz-transform: translateY($y);
  -ms-transform: translateY($y);
  -o-transform: translateY($y);
  transform: translateY($y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
  -moz-transform: skew($x, $y);
  -ms-transform: skew($x, $y);
  -o-transform: skew($x, $y);
  transform: skew($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

// -------------------- For Site -------------
@mixin gradient-vertical($startColor: #555, $endColor: #333) {
  background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
  background-repeat: repeat-x;
}
@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
  background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
  background-repeat: repeat-x;
  background-color: $endColor;
}
@mixin gradient-linear-top($startColor: #555, $startPercent: 0%, $endColor: #333, $endPercent: 100%) {
  background: -moz-linear-gradient(to top, $startColor $startPercent, $endColor $endPercent); // FF 3.6+
  background: -o-linear-gradient(to top, $startColor $startPercent, $endColor $endPercent); // Opera 11.10
  background: -ms-linear-gradient(to top, $startColor $startPercent, $endColor $endPercent);
  background: -webkit-linear-gradient(bottom, $startColor $startPercent, $endColor $endPercent); // Safari 5.1+, Chrome 10+
  background: linear-gradient(to top, $startColor $startPercent, $endColor $endPercent); // Standard, IE10
  background-repeat: repeat-x;
}

// placeholder
@mixin placeholder($property, $expression) {
  &:-moz-placeholder {#{$property}: #{$expression};}                  /*Firefox 18-*/
  &::-moz-placeholder {#{$property}: #{$expression};}                 /*Firefox 19+*/
  &::-webkit-input-placeholder {#{$property}: #{$expression};}         /* WebKit, Blink, Edge */
  &:-ms-input-placeholder {#{$property}: #{$expression}; opacity: 1;} /* Internet Explorer 10-11 */
  &:placeholder-shown {#{$property}: #{$expression};}                 /* Standard Pseudo-class */
  &::placeholder {#{$property}: #{$expression};}
}

// center
@mixin position-center(){
  position: absolute;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%,-50%);
  -webkit-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

@mixin text-truncate-content($line) {
  /* autoprefixer: off */
  -webkit-box-orient: vertical;
  display: block;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  30%)) {
  // For Google Chrome
  &::-webkit-scrollbar {
    width:  $size!important;
    height: $size!important;;
  }

  &::-webkit-scrollbar-thumb {
    background: $foreground-color!important;;
  }

  &::-webkit-scrollbar-track {
    background: $background-color!important;;
  }

  // For Internet Explorer
  & {
    scrollbar-face-color: $foreground-color!important;;
    scrollbar-track-color: $background-color!important;;
  }
}
@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
@mixin placeholder($color){
  &::-webkit-input-placeholder { /* Edge */
    color: $color;
  }

  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    color: $color;
  }

  &::placeholder {
    color: $color;
  }
}