generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cor_entity {
  id             Int       @id @default(autoincrement())
  refId          Int?
  catId          Int?
  code           String    @unique(map: "IDX_ce504ece33ceadc9f7307e8101") @db.VarChar(255)
  exchange       String    @db.VarChar(255)
  industryName1  String?   @db.VarChar(255)
  industryName2  String?   @db.VarChar(255)
  industryName3  String?   @db.VarChar(255)
  totalShares    BigInt
  name           String    @db.VarChar(255)
  firstTradeDate DateTime? @db.Date
}

model fa_beta_entity {
  id         Int      @id @default(autoincrement())
  code       String   @unique(map: "IDX_2836ee1b531807b0a69387ce79") @db.VarChar(255)
  beta_12    Decimal? @db.Decimal(4, 3)
  beta_24    Decimal? @db.Decimal(4, 3)
  beta_36    Decimal? @db.Decimal(4, 3)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model financial_balance_sheet_entity {
  id                                          Int     @id @default(autoincrement())
  code                                        String  @db.VarChar(10)
  quarter                                     Int?    @db.SmallInt
  year                                        Int     @db.SmallInt
  termType                                    Int     @db.SmallInt
  periodBegin                                 String? @db.VarChar(6)
  periodEnd                                   String? @db.VarChar(6)
  united                                      String? @db.VarChar(3)
  auditedStatus                               String  @db.VarChar(3)
  assets                                      Int?
  shortTermAssets                             Int?
  cashAndCashEquivalents                      Int?
  cash                                        Int?
  cashEquivalents                             Int?
  shortTermFinancialInvestments               Int?
  availableForSaleSecurities                  Int?
  availableForSaleSecurity                    Int?
  heldToMaturityInvestments                   Int?
  shortTermReceivables                        Int?
  shortTermTradeAccountsReceivable            Int?
  shortTermPrepaymentsToSuppliers             Int?
  shortTermInterCompanyReceivables            Int?
  progressBillingDefined                      Int?
  shortTermLoanReceivables                    Int?
  otherShortTermReceivables                   Int?
  provisionForShortTermDoubtfulDebts          Int?
  assetsAwaitingResolution                    Int?
  inventoriesGroup                            Int?
  inventories                                 Int?
  provisionForDeclineInValueOfInventories     Int?
  otherShortTermAssetsGroup                   Int?
  shortTermPrepayments                        Int?
  valueAddedTaxToBeReclaimed                  Int?
  taxesAndOtherReceivables                    Int?
  governmentBonds                             Int?
  otherShortTermAssets                        Int?
  longTermAssets                              Int?
  longTermReceivables                         Int?
  longTermTradeReceivables                    Int?
  longTermPrepaymentsToSuppliers              Int?
  capitalAtInterCompany                       Int?
  longTermInterCompanyReceivables             Int?
  longTermLoanReceivables                     Int?
  otherLongTermReceivables                    Int?
  provisionForLongTermDoubtfulDebts           Int?
  fixedAssets                                 Int?
  tangibleFixedAssets                         Int?
  costMaterial                                Int?
  accumulatedDepreciation                     Int?
  financialLeasedFixedAssets                  Int?
  costFinancialLeaseFixedAssets               Int?
  accumulatedDepreciationFinancialLease       Int?
  intangibleFixedAssets                       Int?
  costIntangible                              Int?
  accumulatedDepreciationIntangible           Int?
  investmentProperties                        Int?
  costInvestmentProperties                    Int?
  accumulatedDepreciationInvestmentProperties Int?
  longTermAssetsInProgress                    Int?
  longTermProductionInProgress                Int?
  constructionInProgress                      Int?
  longTermFinancialInvestments                Int?
  investmentsInSubsidiaries                   Int?
  investmentsInAssociates                     Int?
  investmentsInOtherEntities                  Int?
  provisionForDiminution                      Int?
  heldToMaturityFinancialInvestments          Int?
  otherLongTermInvestments                    Int?
  otherLongTermAssets                         Int?
  longTermPrepayments                         Int?
  deferredIncomeTaxAssets                     Int?
  longTermEquipmentSuppliesSpareParts         Int?
  otherLongTermAssetsRealEstate               Int?
  goodwill                                    Int?
  totalAssets                                 Int?
  ownerEquityCapital                          Int?
  liabilities                                 Int?
  shortTermLiabilities                        Int?
  shortTermTradeAccountsPayable               Int?
  shortTermAdvancesFromCustomers              Int?
  taxesAndOtherPayables                       Int?
  payableToEmployees                          Int?
  shortTermAcrruedExpenses                    Int?
  shortTermInterCompanyPayables               Int?
  constructionContractProgressPayments        Int?
  shortTermUnearnedRevenue                    Int?
  otherShortTermPayables                      Int?
  shortTermBorrowingsAndFinancialLeases       Int?
  provisionForShortTermLiabilities            Int?
  bonusAndWelfareFund                         Int?
  priceStabilizationFund                      Int?
  governmentBondsCapital                      Int?
  longTermLiabilities                         Int?
  longTermTradePayables                       Int?
  longTermAdvancesFromCustomers               Int?
  longTermAcrruedExpenses                     Int?
  interCompanyPayablesOnBusinessCapital       Int?
  longTermInterCompanyPayables                Int?
  longTermUnearnedRevenue                     Int?
  otherLongTermLiabilities                    Int?
  longTermBorrowingsAndFinancialLeases        Int?
  convertibleBonds                            Int?
  preferredStockDebt                          Int?
  deferredIncomeTaxLiabilities                Int?
  provisionForLongTermLiabilities             Int?
  fundForTechnologyDevelopment                Int?
  provisionForSeveranceAllowances             Int?
  ownerEquityGroup                            Int?
  ownerEquity                                 Int?
  ownerCapital                                Int?
  commonStockWithVotingRight                  Int?
  preferredStock                              Int?
  sharePremium                                Int?
  convertibleBondOption                       Int?
  otherCapitalOfOwners                        Int?
  treasuryShares                              Int?
  assetsRevaluationDifferences                Int?
  foreignExchangeDifferences                  Int?
  investmentAndDevelopmentFund                Int?
  fundToSupportCorporateRestructuring         Int?
  otherFundsFromOwnerEquity                   Int?
  undistributedEarningsAfterTax               Int?
  accumulatedRetainedEarning                  Int?
  undistributedEarningsInThisPeriod           Int?
  reservesForInvestmentInConstruction         Int?
  minorityInterest                            Int?
  financialReserves                           Int?
  otherResourcesAndFunds                      Int?
  subsidizedNotForProfitFunds                 Int?
  fundsInvestedInFixedAssets                  Int?
  cMinorityInterest                           Int?
  totalOwnerEquityAndLiabilities              Int?

  @@unique([code, periodBegin, periodEnd], map: "IDX_ccdff6f1b957fd5c2fcb39f314")
}

model financial_business_report_entity {
  id                                           Int     @id @default(autoincrement())
  code                                         String  @db.VarChar(10)
  quarter                                      Int?    @db.SmallInt
  year                                         Int     @db.SmallInt
  termType                                     Int     @db.SmallInt
  periodBegin                                  String? @db.VarChar(6)
  periodEnd                                    String? @db.VarChar(6)
  united                                       String? @db.VarChar(3)
  auditedStatus                                String  @db.VarChar(3)
  revenue                                      Int?
  deductionFromRevenue                         Int?
  netRevenue                                   Int?
  costOfGoodsSold                              Int?
  grossProfit                                  Int?
  financialIncome                              Int?
  financialExpenses                            Int?
  interestExpenses                             Int?
  shareOfAssociatesAndJointVenturesResult      Int?
  sellingExpenses                              Int?
  generalAndAdministrativeExpenses             Int?
  operatingProfit                              Int?
  otherIncome                                  Int?
  otherExpenses                                Int?
  otherProfit                                  Int?
  shareOfAssociatesAndJointVentures            Int?
  profitBeforeTax                              Int?
  currentCorporateIncomeTaxExpenses            Int?
  deferredIncomeTaxExpenses                    Int?
  netProfitAfterTax                            Int?
  minorityInterest                             Int?
  profitAfterTaxForShareholdersOfParentCompany Int?
  earningsPerShare                             Int?
  dilutedEarningsPerShare                      Int?

  @@unique([code, periodBegin, periodEnd], map: "IDX_3bf19664cecac4e569ce0d39c7")
}

model financial_cash_flow_entity {
  id                                               Int     @id @default(autoincrement())
  code                                             String  @db.VarChar(10)
  quarter                                          Int?    @db.SmallInt
  year                                             Int     @db.SmallInt
  termType                                         Int     @db.SmallInt
  periodBegin                                      String? @db.VarChar(6)
  periodEnd                                        String? @db.VarChar(6)
  united                                           String? @db.VarChar(3)
  auditedStatus                                    String  @db.VarChar(3)
  cashFlowsFromOperatingActivities                 Int?
  profitBeforeTax                                  Int?
  adjustmentsFor                                   Int?
  depreciationOfFixedAssetsAndPropertiesInvestment Int?
  reversalOfProvisionsOverProvisions               Int?
  foreignxEchangeGainLoss                          Int?
  lossProfitFromInvestmentActivities               Int?
  interestExpense                                  Int?
  lossProfitsFromDisposalOfFixedAsset              Int?
  interestIncomeAndDividends                       Int?
  allocationOfGoodwill                             Int?
  otherAdjustmentsFor                              Int?
  operatingProfitBeforeChangesInWorkingCapital     Int?
  increaseDecreaseInReceivables                    Int?
  increaseDecreaseInInventories                    Int?
  increaseDecreaseInPayables                       Int?
  increaseDecreaseInPrepaidExpenses                Int?
  changesInAvailableForSaleSecurities              Int?
  interestPaid                                     Int?
  corporateIncomeTaxPaid                           Int?
  otherReceiptsFromOperatingActivities             Int?
  otherPaymentsForOperatingActivities              Int?
  netCashFlowsFromOperatingActivities              Int?
  cashFlowsFromInvestingActivities                 Int?
  paymentForFixedAssets                            Int?
  receiptsFromDisposalOfFixedAssets                Int?
  loansPurchasesOfOtherEntities                    Int?
  receiptsFromLoanRepayments                       Int?
  paymentsForInvestmentInOtherEntities             Int?
  collectionsOnInvestmentInOtherEntities           Int?
  dividendsInterestAndProfit                       Int?
  increaseDecreaseInTermDeposit                    Int?
  purchasesOfMinoritySharesOfSubsidiaries          Int?
  otherReceiptsFromInvestingActivities             Int?
  otherPaymentsForInvestingActivities              Int?
  netCashFlowsFromInvestingActivities              Int?
  cashFlowsFromFinancingActivities                 Int?
  receiptsFromEquityIssue                          Int?
  paymentForShareRepurchases                       Int?
  proceedsFromBorrowings                           Int?
  principalRepayments                              Int?
  repaymentOfFinancialLeases                       Int?
  dividendsPaidProfitsDistributedToOwners          Int?
  otherReceiptsFromFinancingActivities             Int?
  otherPaymentsForFinancingActivities              Int?
  netCashFlowsFromFinancingActivities              Int?
  netCashFlowsDuringThePeriod                      Int?
  cashAndCashEquivalents                           Int?
  exchangeDifferenceDue                            Int?
  cashAndCashEquivalentsAtEnd                      Int?

  @@unique([code, periodBegin, periodEnd], map: "IDX_d0fffc189007c4a0c391aa7160")
}

model financial_indicators_entity {
  id                                              Int      @id @default(autoincrement())
  code                                            String   @db.VarChar(10)
  quarter                                         Int?     @db.SmallInt
  year                                            Int      @db.SmallInt
  termType                                        Int      @db.SmallInt
  periodBegin                                     String?  @db.VarChar(6)
  periodEnd                                       String?  @db.VarChar(6)
  united                                          String?  @db.VarChar(3)
  auditedStatus                                   String   @db.VarChar(3)
  costOfGoodSoldOverNetRevenue                    Decimal? @db.Decimal(10, 3)
  sellingExpensesOverNetRevenue                   Decimal? @db.Decimal(10, 3)
  generalAndAdministrativeExpensesOverNetRevenue  Decimal? @db.Decimal(10, 3)
  interestExpensesOverNetRevenue                  Decimal? @db.Decimal(10, 3)
  longTermAssetsOverTotalAssets                   Decimal? @db.Decimal(10, 3)
  fixedAssetsOverTotalAssets                      Decimal? @db.Decimal(10, 3)
  tangibleFixedAssetsOverFixedAssets              Decimal? @db.Decimal(10, 3)
  financeLeaseOverFixedAssets                     Decimal? @db.Decimal(10, 3)
  intangibleFixedAssetsOverFixedAssets            Decimal? @db.Decimal(10, 3)
  constructionInProgressOverFixedAssets           Decimal? @db.Decimal(10, 3)
  shortTermAssetsOverTotalAssets                  Decimal? @db.Decimal(10, 3)
  cashOverShortTermAssets                         Decimal? @db.Decimal(10, 3)
  shortTermInvestmentsOverShortTermAssets         Decimal? @db.Decimal(10, 3)
  shortTermReceivablesOverShortTermAssets         Decimal? @db.Decimal(10, 3)
  inventoryOverShortTermAssets                    Decimal? @db.Decimal(10, 3)
  otherShortTermAssetsOverShortTermAssets         Decimal? @db.Decimal(10, 3)
  accrualRatioCF                                  Decimal? @db.Decimal(10, 3)
  cashToIncome                                    Decimal? @db.Decimal(10, 3)
  netCashFlowsOverShortTermLiabilities            Decimal? @db.Decimal(10, 3)
  accrualRatioBalanceSheetMethod                  Decimal? @db.Decimal(10, 3)
  accrualRatioCashFlowMethod                      Decimal? @db.Decimal(10, 3)
  cashReturnToAssets                              Decimal? @db.Decimal(10, 3)
  cashReturnOnEquity                              Decimal? @db.Decimal(10, 3)
  operatingCashFlowOverRevenues                   Decimal? @db.Decimal(10, 3)
  debtCoverage                                    Decimal? @db.Decimal(10, 3)
  cashFlowPerShareCPS                             Decimal? @db.Decimal(10, 3)
  receivablesTurnover                             Decimal? @db.Decimal(10, 3)
  daysOfSalesOutstanding                          Decimal? @db.Decimal(10, 3)
  inventoryTurnover                               Decimal? @db.Decimal(10, 3)
  daysOfInventoryOnHand                           Decimal? @db.Decimal(10, 3)
  payablesTurnover                                Decimal? @db.Decimal(10, 3)
  numberOfDaysOfPayables                          Decimal? @db.Decimal(10, 3)
  fixedAssetTurnover                              Decimal? @db.Decimal(10, 3)
  totalAssetTurnover                              Decimal? @db.Decimal(10, 3)
  equityTurnover                                  Decimal? @db.Decimal(10, 3)
  grossProfitMargin                               Decimal? @db.Decimal(10, 3)
  ebitMargin                                      Decimal? @db.Decimal(10, 3)
  ebitDAOverNetRevenue                            Decimal? @db.Decimal(10, 3)
  netProfitMargin                                 Decimal? @db.Decimal(10, 3)
  roe                                             Decimal? @db.Decimal(10, 3)
  returnOnCapitalEmployedROCE                     Decimal? @db.Decimal(10, 3)
  roa                                             Decimal? @db.Decimal(10, 3)
  cashRatio                                       Decimal? @db.Decimal(10, 3)
  quickRatio                                      Decimal? @db.Decimal(10, 3)
  quickRatioShortTermReceivablesReference         Decimal? @db.Decimal(10, 3)
  shortTermRatio                                  Decimal? @db.Decimal(10, 3)
  interestCoverage                                Decimal? @db.Decimal(10, 3)
  netRevenue                                      Decimal? @db.Decimal(10, 3)
  grossProfit                                     Decimal? @db.Decimal(10, 3)
  profitBeforeTax                                 Decimal? @db.Decimal(10, 3)
  profitAfterTaxForShareholdersOfTheParentCompany Decimal? @db.Decimal(10, 3)
  totalAssets                                     Decimal? @db.Decimal(10, 3)
  longTermLiabilities                             Decimal? @db.Decimal(10, 3)
  liabilities                                     Decimal? @db.Decimal(10, 3)
  ownerEquity                                     Decimal? @db.Decimal(10, 3)
  charterCapital                                  Decimal? @db.Decimal(10, 3)
  shortTermLiabilitiesToTotalLiabilities          Decimal? @db.Decimal(10, 3)
  debtToAssets                                    Decimal? @db.Decimal(10, 3)
  liabilitiesToAssets                             Decimal? @db.Decimal(10, 3)
  equityToAssets                                  Decimal? @db.Decimal(10, 3)
  shortTermLiabilitiesToEquity                    Decimal? @db.Decimal(10, 3)
  debtToEquity                                    Decimal? @db.Decimal(10, 3)
  liabilitiesToEquity                             Decimal? @db.Decimal(10, 3)
  trailingEPS                                     Decimal? @db.Decimal(10, 3)
  bookValuePerShareBVPS                           Int?
  pe                                              Decimal? @db.Decimal(10, 3)
  pb                                              Decimal? @db.Decimal(10, 3)
  ps                                              Decimal? @db.Decimal(10, 3)
  dividendYield                                   Decimal? @db.Decimal(10, 3)
  beta                                            Decimal? @db.Decimal(10, 3)
  evOverEBIT                                      Decimal? @db.Decimal(10, 3)
  evOverEBITDA                                    Decimal? @db.Decimal(10, 3)

  @@unique([code, periodBegin, periodEnd], map: "IDX_335a78f8c48670a5fb5ba760cb")
}

model financial_info_status_entity {
  id       Int     @id @default(autoincrement())
  code     String  @db.VarChar(10)
  type     String  @db.VarChar(4)
  termType Int     @db.SmallInt
  year     String  @db.VarChar(4)
  quarter  String? @db.VarChar(1)
  error    String? @db.Text

  @@unique([code, termType, type], map: "IDX_1e019385c2375b76bfcc35e8f8")
}

model sector_entity {
  id         Int    @id @default(autoincrement())
  sectorName String @db.VarChar(255)
  level      Int    @db.SmallInt
}

model StockPrice {
  id                  Int      @id @default(autoincrement())
  date                DateTime @db.Date
  symbol              String   @db.VarChar(10)
  priceHigh           Int
  priceLow            Int
  priceOpen           Int
  priceAverage        Int
  priceClose          Int
  pricePreviousClose  Int
  priceBasic          Int
  totalVolume         Int
  dealVolume          Int
  volume              BigInt   @db.BigInt
  putthroughVolume    Int
  totalTrade          BigInt   @db.BigInt
  totalValue          BigInt   @db.BigInt
  putthroughValue     BigInt   @db.BigInt
  buyForeignQuantity  Int
  buyForeignValue     BigInt   @db.BigInt
  sellForeignQuantity Int
  sellForeignValue    BigInt   @db.BigInt
  buyCount            Int
  buyQuantity         BigInt   @db.BigInt
  sellCount           Int
  sellQuantity        BigInt   @db.BigInt
  // buyAvg              Decimal  @db.Decimal(8, 3)
  // sellAvg             Decimal  @db.Decimal(8, 3)
  adjRatio            Decimal  @db.Decimal(8, 3)
  adjClose            Int
  adjOpen             Int
  adjHigh             Int
  adjLow              Int
  currentForeignRoom  Int

  @@unique([symbol, date])
  @@map("stock_price")
}

model SyncStatus {
  id            Int      @id @default(autoincrement())
  key           String   @unique // key
  is_success    Boolean // success
  number_of_try Int?
  error         String?
  date          DateTime
  meta          Json?
  page          Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([key])
  @@map("sync_status")
}

// model OrderMatching {
//   id   Int      @id @default(autoincrement())
//   code String
//   type Int
//   date DateTime
//   page Int
//   meta Json
//
//   @@index([code])
//   @@map("order_matching")
// }

model CronSchedule {
  id       Int    @id @default(autoincrement())
  job_code String
  status   Int
  meta     Json?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([job_code])
  @@map("cron_schedule")
}

model Flag {
  key   String @id
  value String
}

model TradingStrategy {
  id Int @id @default(autoincrement())

  name       String
  input      Json
  from       DateTime @db.Date
  to         DateTime @db.Date
  hash       String   @unique // base on (name, input, from, to), for quickly query
  meta       Json?
  state      Int      @db.SmallInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  trading_strategy_process TradingStrategyProcess[]
  trading_strategy_action  TradingStrategyAction[]

  @@map("trading_strategy")
}

model TradingStrategyProcess {
  id Int @id @default(autoincrement())

  symbol     String   @db.VarChar(10)
  meta       Json?
  state      Int      @db.SmallInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  trading_strategy    TradingStrategy @relation(fields: [trading_strategy_id], references: [id], onDelete: Cascade)
  trading_strategy_id Int

  @@map("trading_strategy_process")
}

model TradingStrategyAction {
  id Int @id @default(autoincrement())

  symbol     String   @db.VarChar(10)
  type       Int      @db.SmallInt // buy/sell
  date       DateTime @db.Date
  meta       Json?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  trading_strategy    TradingStrategy @relation(fields: [trading_strategy_id], references: [id], onDelete: Cascade)
  trading_strategy_id Int

  @@unique([symbol, type, date, trading_strategy_id])
  @@map("trading_strategy_action")
}

model StockInfoTicks {
  id     Int      @id @default(autoincrement())
  symbol String   @db.VarChar(10)
  date   DateTime @db.Date
  meta   Json

  @@map("stock_info_ticks")
}

model StockTradingAnalysis {
  id     Int    @id @default(autoincrement())
  symbol String @unique @db.VarChar(10)

  trade_value_7  BigInt? @default(0) @db.BigInt
  trade_value_14 BigInt? @default(0) @db.BigInt
  trade_value_30 BigInt? @default(0) @db.BigInt

  cap BigInt? @default(0) @db.BigInt // Von Hoa

  l16_hullma_trend                Int @default(0) @db.SmallInt // hullma 16 trend, 0 not sure, 1 up, -1 down
  l16_hullma_day_in_trend         Int @default(0) @db.SmallInt // how many days in current trend?
  l16_hullma_highest_diff_percent Int @default(0) @db.SmallInt // Neu dang o downtrend, thi gia giam max tu luc up trend lan truoc la bao nhieu
  cur_gap_percent                 Int @default(0) @db.SmallInt

  foreign_buy_30  Int @default(0) @db.SmallInt
  foreign_sell_30 Int @default(0) @db.SmallInt
  foreign_diff_30 Int @default(0) @db.SmallInt

  foreign_buy_15  Int @default(0) @db.SmallInt
  foreign_sell_15 Int @default(0) @db.SmallInt
  foreign_diff_15 Int @default(0) @db.SmallInt

  foreign_buy_7  Int @default(0) @db.SmallInt
  foreign_sell_7 Int @default(0) @db.SmallInt
  foreign_diff_7 Int @default(0) @db.SmallInt

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("stock_trading_analysis")
}

model Result {
  key   String @id
  value String

  // cache everything in db
  @@map("results")
}

model StockAlert {
  id         Int     @id @default(autoincrement())
  name       String
  symbol     String? @db.VarChar(10)
  conditions Json
  state      Int     @db.SmallInt

  @@map("stock_alerts")
}

// model MarketTickActionAnalyze {
//   id Int @id @default(autoincrement())
//
//   time_res Int @db.SmallInt
//
//   shark_avg_buy_count  Int @db.SmallInt
//   shark_avg_sell_count Int @db.SmallInt
//   shark_avg_buy_val    Int @db.SmallInt
//   shark_avg_sell_val   Int @db.SmallInt
//
//   sheep_avg_buy_count  Int @db.SmallInt
//   sheep_avg_sell_count Int @db.SmallInt
//   sheep_avg_buy_val    Int @db.SmallInt
//   sheep_avg_sell_val   Int @db.SmallInt
//
//   up_pct_buy_val_150_avg   Int @db.SmallInt // % VNindex se tang neu buy 150% avg
//   up_pct_buy_count_150_avg Int @db.SmallInt // % VNindex se tang neu buy 150% avg
//
//   down_pct_sell_val_150_avg   Int @db.SmallInt // % VNindex se giam neu buy 150% avg
//   down_pct_sell_count_150_avg Int @db.SmallInt // % VNindex se giam neu buy 150% avg
//
//   @@map("market_tick_action_analyze")
// }
//

// Chạy hằng ngày(cuối ngày) để cho ra dữ liệu giao dịch trung bình của ngày hôm đó
// Thông tin trong bảng này chính là base để so sánh, ví dụ như ngày hôm nay giao dịch nhiều bao nhiêu thì phải so sánh trung bình 5 ngày trước đó chứ không thể so sánh với 1 ngày bất kì xa xôi nào được
model MarketTickActionHistoryAnalyze {
  id Int @id @default(autoincrement())

  date   DateTime @db.Date
  symbol String   @db.VarChar(10)

  avg_shark_buy_count  Int @db.SmallInt
  avg_shark_sell_count Int @db.SmallInt
  avg_shark_buy_value  Int @db.SmallInt
  avg_shark_sell_value Int @db.SmallInt

  avg_sheep_buy_count  Int @db.Integer
  avg_sheep_sell_count Int @db.Integer
  avg_sheep_buy_value  Int @db.Integer
  avg_sheep_sell_value Int @db.Integer

  avg_buy_count  Int @db.SmallInt
  avg_sell_count Int @db.SmallInt
  avg_buy_value  Int @db.Integer
  avg_sell_value Int @db.Integer

  @@map("market_tick_action_history_analyze")
}

// Phân tích hành vi trong ngày,
// Dựa vào type để biết được là hành vi nào, m là gấp bao nhiêu lần so với bình thường
model MarketTickActionDayAnalyze {
  id Int @id @default(autoincrement())

  symbol String @db.VarChar(10)
  ts     Int // Timestamp

  type String @db.VarChar()
  m    Int    @db.SmallInt

  @@unique([symbol, ts, type])
  @@map("market_tick_action_day_analyze")
}

// Bảng này là thông tin sum cho toàn bộ các cổ phiếu trong default category
model MarketTickActionInfo {
  ts Int @id // Timestamp

  shark_buy_count  Int @db.SmallInt
  shark_sell_count Int @db.SmallInt
  sheep_buy_count  Int @db.SmallInt
  sheep_sell_count Int @db.SmallInt

  shark_buy_value  Int @db.Integer
  shark_sell_value Int @db.Integer
  sheep_buy_value  Int @db.Integer
  sheep_sell_value Int @db.Integer

  buy_count  Int @db.SmallInt
  sell_count Int @db.SmallInt
  buy_value  Int @db.Integer
  sell_value Int @db.Integer

  market_symbol_tick_actions MarketTickSymbolActionInfo[]

  @@map("market_tick_action_info")
}

// Quan hệ n-1 với bảng chính MarketTickActionInfo
// Thông tin cụ thể cho từng mã
model MarketTickSymbolActionInfo {
  id Int @id @default(autoincrement())

  ts     Int
  symbol String @db.VarChar(10)
  price  Int    @db.Integer

  shark_buy_count  Int @db.SmallInt
  shark_sell_count Int @db.SmallInt
  sheep_buy_count  Int @db.SmallInt
  sheep_sell_count Int @db.SmallInt

  shark_buy_value  Int @db.Integer
  shark_sell_value Int @db.Integer
  sheep_buy_value  Int @db.Integer
  sheep_sell_value Int @db.Integer

  buy_count  Int @db.SmallInt
  sell_count Int @db.SmallInt
  buy_value  Int @db.Integer
  sell_value Int @db.Integer

  MarketTickAction MarketTickActionInfo @relation(fields: [ts], references: [ts], onDelete: Cascade)

  @@unique([symbol, ts])
  @@map("market_tick_symbol_action_info")
}

model MarketTickJobInfo {
  id   Int      @id @default(autoincrement())
  date DateTime @db.Date

  type   String @db.VarChar
  symbol String @db.VarChar(10)

  isSuccess  Boolean
  try_count  Int     @db.SmallInt
  last_error String? @db.Text

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([date, type, symbol])
  @@map("market_tick_job_info")
}

model SimpleStockPrice {
  id                  Int      @id @default(autoincrement())
  date                DateTime @db.Date
  symbol              String   @db.VarChar(10)
  priceBasic          Int // Gia dong cua ngay hom qua, dua vao do de biet duoc % change
  priceHigh           Int
  priceLow            Int
  priceOpen           Int
  priceClose          Int
  priceAverage        Int
  volume              Int
  value               Int // 10**6
  dealVolume          Int
  buyForeignQuantity  Int
  buyForeignValue     Int // 10**6
  sellForeignQuantity Int
  sellForeignValue    Int // 10**6
  currentForeignRoom  BigInt?  @db.BigInt

  @@unique([symbol, date])
  @@map("simple_stock_price")
}

model StockTradingAnalysisHistory {
  id     Int      @id @default(autoincrement())
  symbol String   @db.VarChar(10)
  date   DateTime @db.Date

  deal_value_5 Int @default(0) @db.Integer // 10**6

  @@unique([symbol, date])
  @@map("stock_trading_analysis_history")
}
